// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_BookStore.Data;

#nullable disable

namespace Online_BookStore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240617123417_CreateBookAndBookImageTbl")]
    partial class CreateBookAndBookImageTbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Online_BookStore.Models.BookImages", b =>
                {
                    b.Property<int>("Image_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Image_ID"));

                    b.Property<int?>("Book_ID")
                        .HasColumnType("int");

                    b.Property<string>("Image_Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Image_ID");

                    b.HasIndex("Book_ID");

                    b.ToTable("Books_List_Images");
                });

            modelBuilder.Entity("Online_BookStore.Models.Books", b =>
                {
                    b.Property<int>("Book_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Book_Id"));

                    b.Property<int>("Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Price")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<DateOnly>("PublishDate")
                        .HasColumnType("date");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Book_Id");

                    b.HasIndex("Category_ID");

                    b.ToTable("Books_List");
                });

            modelBuilder.Entity("Online_BookStore.Models.Category", b =>
                {
                    b.Property<int>("Category_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Category_ID"));

                    b.Property<string>("Category_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Category_ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Category_ID = 1,
                            Category_Name = "Fiction"
                        },
                        new
                        {
                            Category_ID = 2,
                            Category_Name = "Romance"
                        },
                        new
                        {
                            Category_ID = 3,
                            Category_Name = "Mystery/Thriller"
                        },
                        new
                        {
                            Category_ID = 4,
                            Category_Name = "Classics"
                        },
                        new
                        {
                            Category_ID = 5,
                            Category_Name = "Fiction"
                        },
                        new
                        {
                            Category_ID = 6,
                            Category_Name = "Romance"
                        },
                        new
                        {
                            Category_ID = 7,
                            Category_Name = "Mystery/Thriller"
                        },
                        new
                        {
                            Category_ID = 8,
                            Category_Name = "Classics"
                        });
                });

            modelBuilder.Entity("Online_BookStore.Models.BookImages", b =>
                {
                    b.HasOne("Online_BookStore.Models.Books", "Books")
                        .WithMany()
                        .HasForeignKey("Book_ID");

                    b.Navigation("Books");
                });

            modelBuilder.Entity("Online_BookStore.Models.Books", b =>
                {
                    b.HasOne("Online_BookStore.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });
#pragma warning restore 612, 618
        }
    }
}
